/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'wyukawa' at '15/02/02 18:37' with Gradle 2.2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'distribution'

version = '6.0'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    maven {
        url "http://repo.hortonworks.com/content/repositories/releases"
    }
}

compileJava.options.encoding = 'UTF-8' // source encoding
sourceCompatibility = 1.8
targetCompatibility = 1.8

task createDirs() << {
  file('build/package').mkdirs()
}

task copyWeb(type: Copy) {
  from('web/build')
  into('build/package/web')
}

task copyDeps(type: Copy) {
  from(configurations.compile)
  into('build/package/lib')
}

task copyLibs(type: Copy, dependsOn: 'jar') {
  from('build/libs')
  into('build/package/lib')
}

task copyPackage(type: Copy) {
  from('src/package')
  into('build/package')
}

task copyData(type: Copy) {
    from('data')
    into('build/package/data')
}

task copyResult(type: Copy) {
    from('result')
    into('build/package/result')
}

task copy(dependsOn: [
      'createDirs',
      'copyWeb',
      'copyDeps',
      'copyLibs',
      'copyPackage',
      'copyData',
      'copyResult']) {
  }

distributions {
  main {
    baseName = 'yanagishima'
    contents {
      from { 'build/package' }
    }
  }
}

distZip.dependsOn 'copy'

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.10'
    compile 'org.slf4j:slf4j-log4j12:1.7.10'
    compile 'log4j:log4j:1.2.17'
    compile 'org.eclipse.jetty.aggregate:jetty-all:9.3.7.v20160115'
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'com.facebook.presto:presto-client:0.178'
    compile 'com.facebook.presto:presto-parser:0.178'
    compile 'com.google.inject:guice:4.0'
    compile 'com.google.inject.extensions:guice-servlet:4.0'
    compile 'org.codehaus.jackson:jackson-core-asl:1.9.13'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    compile 'net.sf.jopt-simple:jopt-simple:4.8'
    compile 'io.airlift:http-client:0.148'
    compile 'io.airlift:json:0.148'
    compile 'org.apache.httpcomponents:fluent-hc:4.4.1'
    compile 'org.xerial:sqlite-jdbc:3.18.0'
    compile 'me.geso:tinyorm:1.13.0'
    compile 'org.projectlombok:lombok:1.16.16'
    compile 'org.komamitsu:fluency:1.3.0'
    compile 'org.apache.hive:hive-jdbc:1.2.1000.2.5.3.0-37'
    compile 'org.apache.hadoop:hadoop-common:2.7.3.2.5.3.0-37'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.11'
}
